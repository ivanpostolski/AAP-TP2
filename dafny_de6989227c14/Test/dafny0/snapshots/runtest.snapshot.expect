
-------------------- Snapshots0.dfy --------------------
Processing command (at Snapshots0.v0.dfy(3,6)) assert (forall<alpha> $o: ref, $f: Field alpha :: false ==> $_Frame[$o, $f]);
  >>> DoNothingToAssert
Processing command (at Snapshots0.v0.dfy(4,10)) assert Lit(false);
  >>> DoNothingToAssert

Dafny program verifier finished with 3 verified, 0 errors
Processing implementation CheckWellformed$$_module.__default.bar (at Snapshots0.v1.dfy(7,8)):
  >>> added axiom: ##extracted_function##1() == (0 == $ModuleContextHeight && 0 == $FunctionContextHeight)
  >>> added after assuming the current precondition: a##cached##0 := a##cached##0 && ##extracted_function##1();
Processing call to procedure IntraModuleCall$$_module.__default.bar in implementation Impl$$_module.__default.foo (at Snapshots0.v1.dfy(3,6)):
  >>> added axiom: (forall call0old#AT#$Heap: Heap, $Heap: Heap :: {:weight 30} { ##extracted_function##2(call0old#AT#$Heap, $Heap) } ##extracted_function##2(call0old#AT#$Heap, $Heap) == (true && Lit(false) && (forall<alpha> $o: ref, $f: Field alpha :: { read($Heap, $o, $f) } $o != null && read(call0old#AT#$Heap, $o, alloc) ==> read($Heap, $o, $f) == read(call0old#AT#$Heap, $o, $f)) && $HeapSucc(call0old#AT#$Heap, $Heap)))
  >>> added after: a##cached##0 := a##cached##0 && ##extracted_function##2(call0old#AT#$Heap, $Heap);
Processing command (at <unknown location>) a##cached##0 := a##cached##0 && ##extracted_function##1();
  >>> AssumeNegationOfAssumptionVariable
Processing command (at Snapshots0.v1.dfy(3,6)) assert (forall<alpha> $o: ref, $f: Field alpha :: false ==> $_Frame[$o, $f]);
  >>> MarkAsFullyVerified
Processing command (at <unknown location>) a##cached##0 := a##cached##0 && ##extracted_function##2(call0old#AT#$Heap, $Heap);
  >>> AssumeNegationOfAssumptionVariable
Processing command (at Snapshots0.v1.dfy(4,10)) assert Lit(false);
  >>> MarkAsPartiallyVerified
Snapshots0.v1.dfy(4,10): Error: assertion violation
Execution trace:
    (0,0): anon0

Dafny program verifier finished with 2 verified, 1 error

-------------------- Snapshots1.dfy --------------------
Processing command (at Snapshots1.v0.dfy(3,4)) assert (forall<alpha> $o: ref, $f: Field alpha :: false ==> $_Frame[$o, $f]);
  >>> DoNothingToAssert
Processing command (at Snapshots1.v0.dfy(4,10)) assert Lit(false);
  >>> DoNothingToAssert
Processing command (at Snapshots1.v0.dfy(12,3)) assert true;
  >>> DoNothingToAssert

Dafny program verifier finished with 4 verified, 0 errors
Processing call to procedure IntraModuleCall$$_module.__default.N in implementation Impl$$_module.__default.M (at Snapshots1.v1.dfy(3,4)):
  >>> added after: a##cached##0 := a##cached##0 && false;
Processing command (at Snapshots1.v1.dfy(12,3)) assert true;
  >>> MarkAsFullyVerified
Processing command (at Snapshots1.v1.dfy(3,4)) assert (forall<alpha> $o: ref, $f: Field alpha :: false ==> $_Frame[$o, $f]);
  >>> MarkAsFullyVerified
Processing command (at Snapshots1.v1.dfy(4,10)) assert Lit(false);
  >>> DoNothingToAssert
Snapshots1.v1.dfy(4,10): Error: assertion violation
Execution trace:
    (0,0): anon0

Dafny program verifier finished with 3 verified, 1 error

-------------------- Snapshots2.dfy --------------------
Processing command (at Snapshots2.v0.dfy(3,4)) assert (forall<alpha> $o: ref, $f: Field alpha :: false ==> $_Frame[$o, $f]);
  >>> DoNothingToAssert
Processing command (at Snapshots2.v0.dfy(4,10)) assert Lit(false);
  >>> DoNothingToAssert
Processing command (at Snapshots2.v0.dfy(11,11)) assert true;
  >>> DoNothingToAssert
Processing command (at Snapshots2.v0.dfy(11,15)) assert _module.__default.P($LS($LS($LZ)), $Heap) <==> _module.__default.Q($LS($LS($LZ)), $Heap);
  >>> DoNothingToAssert
Processing command (at Snapshots2.v0.dfy(14,11)) assert true;
  >>> DoNothingToAssert
Processing command (at Snapshots2.v0.dfy(14,15)) assert _module.__default.Q($LS($LS($LZ)), $Heap) <==> Lit(_module.__default.R($Heap));
  >>> DoNothingToAssert
Processing command (at Snapshots2.v0.dfy(18,3)) assert true;
  >>> DoNothingToAssert

Dafny program verifier finished with 6 verified, 0 errors
Processing call to procedure IntraModuleCall$$_module.__default.N in implementation Impl$$_module.__default.M (at Snapshots2.v1.dfy(3,4)):
  >>> added after: a##cached##0 := a##cached##0 && false;
Processing implementation CheckWellformed$$_module.__default.P (at Snapshots2.v1.dfy(10,11)):
  >>> added after assuming the current precondition: a##cached##0 := a##cached##0 && false;
Processing implementation CheckWellformed$$_module.__default.Q (at Snapshots2.v1.dfy(13,11)):
  >>> added after assuming the current precondition: a##cached##0 := a##cached##0 && false;
Processing command (at Snapshots2.v1.dfy(18,3)) assert true;
  >>> MarkAsFullyVerified
Processing command (at Snapshots2.v1.dfy(3,4)) assert (forall<alpha> $o: ref, $f: Field alpha :: false ==> $_Frame[$o, $f]);
  >>> MarkAsFullyVerified
Processing command (at Snapshots2.v1.dfy(4,10)) assert Lit(false);
  >>> DoNothingToAssert
Snapshots2.v1.dfy(4,10): Error: assertion violation
Execution trace:
    (0,0): anon0
Processing command (at Snapshots2.v1.dfy(11,11)) assert true;
  >>> DoNothingToAssert
Processing command (at Snapshots2.v1.dfy(11,15)) assert _module.__default.P($LS($LS($LZ)), $Heap) <==> _module.__default.Q($LS($LS($LZ)), $Heap);
  >>> DoNothingToAssert
Processing command (at Snapshots2.v1.dfy(14,11)) assert true;
  >>> DoNothingToAssert
Processing command (at Snapshots2.v1.dfy(14,15)) assert _module.__default.Q($LS($LS($LZ)), $Heap) <==> Lit(_module.__default.R($Heap));
  >>> DoNothingToAssert

Dafny program verifier finished with 5 verified, 1 error

-------------------- Snapshots3.dfy --------------------
Processing command (at Snapshots3.v0.dfy(9,14)) assert Lit(0 != 0);
  >>> DoNothingToAssert
Snapshots3.v0.dfy(9,14): Error: assertion violation
Execution trace:
    (0,0): anon0
    (0,0): anon3_Else

Dafny program verifier finished with 1 verified, 1 error
Processing command (at Snapshots3.v1.dfy(5,12)) assert Lit(true);
  >>> DoNothingToAssert
Processing command (at Snapshots3.v1.dfy(9,14)) assert Lit(0 != 0);
  >>> RecycleError
Snapshots3.v0.dfy(9,14): Error: assertion violation
Execution trace:
    (0,0): anon0
    (0,0): anon3_Else

Dafny program verifier finished with 1 verified, 1 error

-------------------- Snapshots4.dfy --------------------
Processing command (at Snapshots4.v0.dfy(9,14)) assert LitInt(0) == LitInt(0);
  >>> DoNothingToAssert

Dafny program verifier finished with 2 verified, 0 errors
Processing command (at Snapshots4.v1.dfy(5,14)) assert Lit(1 != 1);
  >>> DoNothingToAssert
Processing command (at Snapshots4.v1.dfy(9,14)) assert LitInt(0) == LitInt(0);
  >>> MarkAsFullyVerified
Processing command (at Snapshots4.v1.dfy(10,14)) assert Lit(2 != 2);
  >>> DoNothingToAssert
Snapshots4.v1.dfy(5,14): Error: assertion violation
Execution trace:
    (0,0): anon0
    (0,0): anon3_Then
Snapshots4.v1.dfy(10,14): Error: assertion violation
Execution trace:
    (0,0): anon0
    (0,0): anon3_Else

Dafny program verifier finished with 1 verified, 2 errors

-------------------- Snapshots5.dfy --------------------
Processing command (at Snapshots5.v0.dfy(3,4)) assert (forall<alpha> $o: ref, $f: Field alpha :: false ==> $_Frame[$o, $f]);
  >>> DoNothingToAssert
Processing command (at Snapshots5.v0.dfy(10,40)) assert (forall b#1: bool :: true ==> b#1 || !b#1) || 0 != 0;
  >>> DoNothingToAssert
Processing command (at Snapshots5.v0.dfy(12,4)) assert (forall<alpha> $o: ref, $f: Field alpha :: false ==> $_Frame[$o, $f]);
  >>> DoNothingToAssert
Processing command (at Snapshots5.v0.dfy(13,38)) assert (forall b#3: bool :: true ==> b#3 || !b#3) || 3 != 3;
  >>> DoNothingToAssert
Processing command (at Snapshots5.v0.dfy(20,40)) assert (forall b#5: bool :: true ==> b#5 || !b#5) || 1 != 1;
  >>> DoNothingToAssert

Dafny program verifier finished with 3 verified, 0 errors
Processing command (at Snapshots5.v1.dfy(3,4)) assert (forall<alpha> $o: ref, $f: Field alpha :: false ==> $_Frame[$o, $f]);
  >>> MarkAsFullyVerified
Processing command (at Snapshots5.v1.dfy(10,40)) assert (forall b#1: bool :: true ==> b#1 || !b#1) || 0 != 0;
  >>> MarkAsFullyVerified
Processing command (at Snapshots5.v1.dfy(12,4)) assert (forall<alpha> $o: ref, $f: Field alpha :: false ==> $_Frame[$o, $f]);
  >>> MarkAsFullyVerified
Processing command (at Snapshots5.v1.dfy(13,38)) assert (forall b#3: bool :: true ==> b#3 || !b#3) || 3 != 3;
  >>> MarkAsFullyVerified
Processing command (at Snapshots5.v1.dfy(20,40)) assert (exists b#5: bool :: b#5 || !b#5) || 4 != 4;
  >>> DoNothingToAssert
Processing command (at Snapshots5.v1.dfy(22,38)) assert (exists b#7: bool :: b#7 || !b#7) || 5 != 5;
  >>> DoNothingToAssert

Dafny program verifier finished with 3 verified, 0 errors

-------------------- Snapshots6.dfy --------------------
Processing command (at Snapshots6.v0.dfy(20,14)) assert Lit(false);
  >>> DoNothingToAssert

Dafny program verifier finished with 4 verified, 0 errors
Processing command (at Snapshots6.v1.dfy(20,14)) assert Lit(false);
  >>> DoNothingToAssert
Snapshots6.v1.dfy(20,14): Error: assertion violation
Execution trace:
    (0,0): anon0

Dafny program verifier finished with 3 verified, 1 error

-------------------- Snapshots7.dfy --------------------
Processing command (at Snapshots7.v0.dfy(19,14)) assert Lit(false);
  >>> DoNothingToAssert

Dafny program verifier finished with 4 verified, 0 errors
Processing implementation CheckWellformed$$_0_M0.C.Foo (at Snapshots7.v1.dfy(5,12)):
  >>> added axiom: ##extracted_function##1() == (0 == $ModuleContextHeight && 0 == $FunctionContextHeight)
  >>> added after assuming the current precondition: a##cached##0 := a##cached##0 && ##extracted_function##1();
Processing implementation Impl$$_0_M0.C.Foo (at Snapshots7.v1.dfy(5,12)):
  >>> added axiom: ##extracted_function##2() == (0 == $ModuleContextHeight && 0 == $FunctionContextHeight && Lit(false))
  >>> added after assuming the current precondition: a##cached##0 := a##cached##0 && ##extracted_function##2();
Processing implementation CheckWellformed$$_1_M1.C.Foo (at Snapshots7.v1.dfy[M1](5,12)):
  >>> added axiom: ##extracted_function##3() == (1 == $ModuleContextHeight && 0 == $FunctionContextHeight)
  >>> added after assuming the current precondition: a##cached##0 := a##cached##0 && ##extracted_function##3();
Processing implementation Impl$$_1_M1.C.Foo (at Snapshots7.v1.dfy[M1](5,12)):
  >>> added axiom: ##extracted_function##4() == (1 == $ModuleContextHeight && 0 == $FunctionContextHeight && Lit(false))
  >>> added after assuming the current precondition: a##cached##0 := a##cached##0 && ##extracted_function##4();
Processing command (at <unknown location>) a##cached##0 := a##cached##0 && ##extracted_function##1();
  >>> AssumeNegationOfAssumptionVariable
Processing command (at <unknown location>) a##cached##0 := a##cached##0 && ##extracted_function##2();
  >>> AssumeNegationOfAssumptionVariable
Processing command (at <unknown location>) a##cached##0 := a##cached##0 && ##extracted_function##3();
  >>> AssumeNegationOfAssumptionVariable
Processing command (at <unknown location>) a##cached##0 := a##cached##0 && ##extracted_function##4();
  >>> AssumeNegationOfAssumptionVariable
Processing command (at Snapshots7.v1.dfy(19,14)) assert Lit(false);
  >>> MarkAsPartiallyVerified
Snapshots7.v1.dfy(19,14): Error: assertion violation
Execution trace:
    (0,0): anon0

Dafny program verifier finished with 3 verified, 1 error
